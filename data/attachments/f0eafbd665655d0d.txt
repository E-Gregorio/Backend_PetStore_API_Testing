let responseJson;


pm.test("Se obtuvo un ID válido", function() {
    const petId = pm.environment.get("petId");
    console.log("Valor de petId: ", petId);
    pm.expect(petId).to.not.be.undefined;
    pm.expect(petId).to.not.be.null;
});


pm.test("El código de estado es 200", function () {
    pm.response.to.have.status(200);
});


pm.test("La respuesta es JSON válido", function () {
    try {
        responseJson = pm.response.json();
        pm.expect(responseJson).to.be.an('object');
    } catch (e) {
        pm.expect.fail('La respuesta no es JSON válido: ' + e.message);
    }
});

if (responseJson) {
    
    pm.test("La respuesta tiene la estructura correcta", function () {
        pm.expect(responseJson).to.have.property('id');
        pm.expect(responseJson).to.have.property('name');
        pm.expect(responseJson).to.have.property('status');
        pm.expect(responseJson).to.have.property('category');
        pm.expect(responseJson).to.have.property('photoUrls').to.be.an('array');
        pm.expect(responseJson).to.have.property('tags').to.be.an('array');
    });

    
    pm.test("El ID de la mascota es correcto", function () {
        const expectedId = pm.environment.get("petId");
        pm.expect(responseJson.id).to.equal(Number(expectedId));
    });

    
    pm.test("El status no está vacío", function () {
        pm.expect(responseJson.status).to.not.be.empty;
    });
}