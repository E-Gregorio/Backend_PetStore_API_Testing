pm.test("El código de estado es 200", function () {
    pm.response.to.have.status(200);
});

pm.test("La respuesta tiene el formato correcto", function () {
    const responseJson = pm.response.json();
    pm.expect(responseJson).to.have.property('code', 200);
    pm.expect(responseJson).to.have.property('type');
    pm.expect(responseJson).to.have.property('message');
});

// Verificar que el usuario fue creado haciendo una petición GET
const username = pm.environment.get("currentUsername");
const getUserRequest = {
    url: `https://petstore.swagger.io/v2/user/${username}`,
    method: 'GET',
    header: {
        'accept': 'application/json'
    }
};

// Verificar que el usuario existe y los datos son correctos
pm.sendRequest(getUserRequest, function (err, response) {
    if (err) {
        console.error(err);
    }
    
    const originalUserData = JSON.parse(pm.environment.get("currentUserData"));
    
    pm.test("El usuario esta creado", function () {
        pm.expect(response).to.have.property('code', 200);
        
        const userJson = response.json();
        pm.expect(userJson.username).to.eql(originalUserData.username);
        pm.expect(userJson.email).to.eql(originalUserData.email);
        pm.expect(userJson.firstName).to.eql(originalUserData.firstName);
        pm.expect(userJson.lastName).to.eql(originalUserData.lastName);
    });
});